# -*- coding: utf-8 -*-
"""predictions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-m9EwhieGHjUFDYI6CLB5ZlXr-FS9vRL
"""

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import requests

from google.colab import userdata
userdata.get('weather_api')

location_data = requests.get("https://ipinfo.io").json()
print(location_data)

city = location_data['city']
lat, lon = location_data['loc'].split(',')

api_key = userdata.get('weather_api')

url = f"https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&exclude=minutely,hourly,alerts&units=metric&appid={api_key}"

response = requests.get(url)
weather = response.json()

weather.keys()

if 'daily' not in weather:
    print("API Error:", weather)
else:
    for day in weather['daily']:
        print(day['temp']['day'])

# get the average of the below from the api, then add in the user inputted data in watering per week and soil type to compute

input_data = {
    'avg_temp': 26,
    'humidity': 45,
    'sunlight_hrs': 9,
    'watering_per_week': 2,
}

# example case

data = {
    'avg_temp': [75, 60, 90, 85, 70, 55, 88, 62, 65, 82],
    'humidity': [30, 60, 25, 20, 50, 70, 40, 65, 45, 55],
    'sunlight_hrs': [10, 5, 12, 11, 7, 4, 9, 6, 8, 10],
    'watering_frequency': [2, 3, 1, 1, 3, 3, 2, 3, 2, 1],
    'plant_ok': [0, 1, 0, 0, 1, 1, 1, 1, 1, 0]  # 1 = Yes, 0 = No
}

df = pd.DataFrame(data)

# Split into features and labels
X = df.drop('plant_ok', axis=1)
y = df['plant_ok']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Classification Report:\n")
print(classification_report(y_test, y_pred))

# Example new plant care input
new_input = pd.DataFrame([{
    'avg_temp': 78,
    'humidity': 35,
    'sunlight_hrs': 9,
    'watering_per_week': 2,
    'soil_type': 1  # loamy (check encoding)
}])

prediction = model.predict(new_input)
print("Prediction for new plant:", "Doing well" if prediction[0] == 1 else "Plant dying")

